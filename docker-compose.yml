services:
  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:9.4
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.4.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
  ## End Keycloak Config with Mysql database


  loki:
    image: grafana/loki:main
    container_name: loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
  tempo:
    image: grafana/tempo:2.9.0
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    ports:
      - "3200:3200"  # Tempo
      - "9411:9411" # zipkin
  grafana:
    image: grafana/grafana:12.2.0
    container_name: grafana
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
#  config-server:
#    image: tranlinh102/spring-coach-ticket-booking-config-server
#    container_name: config-server
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    healthcheck:
#      test: ["CMD", "curl", "-I", "http://config-server:8888"]
#      interval: 5s
#      timeout: 5s
#      retries: 10
#    ports:
#      - "8888:8888"
#
#  discovery-server:
#    image: tranlinh102/spring-coach-ticket-booking-server
#    container_name: discovery-server
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://discovery-server:8761"]
#      interval: 5s
#      timeout: 3s
#      retries: 10
#    depends_on:
#      config-server:
#        condition: service_healthy
#    ports:
#      - "8761:8761"